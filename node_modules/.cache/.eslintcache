[{"/home/sol/github.com/solkn/chat-app-reactjs/src/index.js":"1","/home/sol/github.com/solkn/chat-app-reactjs/src/App.js":"2","/home/sol/github.com/solkn/chat-app-reactjs/src/serviceWorker.js":"3","/home/sol/github.com/solkn/chat-app-reactjs/src/pages/home/index.jsx":"4","/home/sol/github.com/solkn/chat-app-reactjs/src/pages/login/index.jsx":"5","/home/sol/github.com/solkn/chat-app-reactjs/src/pages/signup/index.jsx":"6","/home/sol/github.com/solkn/chat-app-reactjs/src/components/top-bar/index.jsx":"7"},{"size":696,"mtime":1625481775794,"results":"8","hashOfConfig":"9"},{"size":507,"mtime":1625484035561,"results":"10","hashOfConfig":"9"},{"size":5014,"mtime":1625469544636,"results":"11","hashOfConfig":"9"},{"size":1941,"mtime":1625486794063,"results":"12","hashOfConfig":"9"},{"size":1194,"mtime":1625485953197,"results":"13","hashOfConfig":"9"},{"size":1936,"mtime":1625485507871,"results":"14","hashOfConfig":"9"},{"size":990,"mtime":1625492779547,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"tfxgg4",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sol/github.com/solkn/chat-app-reactjs/src/index.js",["34"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\n//import { store } from \"./store/store\";\n\nReactDOM.render(\n  //<Provider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  //</Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n//reportWebVitals();",["35","36"],"/home/sol/github.com/solkn/chat-app-reactjs/src/App.js",[],"/home/sol/github.com/solkn/chat-app-reactjs/src/serviceWorker.js",[],"/home/sol/github.com/solkn/chat-app-reactjs/src/pages/home/index.jsx",["37"],"import { useState } from \"react\";\nimport { Card, Row, Col, Button, Pagination } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport TopBar from \"../../components/top-bar\";\n\nconst Home = () => {\n  const [isModalOpen, setModal] = useState(false);\n\n  const handleMessageChange = (msg) => {\n    /**\n     * TODO: Handle pagination change\n     */\n  };\n\n  const handleMessageClick = (page) => {\n    /**\n     * TODO: Handle book click\n     */\n  };\n\n  return (\n    <>\n    <TopBar/>\n      <div\n        style={{\n          marginTop: \"20px\",\n          marginLeft: \"30px\",\n          marginRight: \"30px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            marginBottom: \"20px\",\n          }}\n        >\n          <Button\n            type=\"default\"\n            style={{ width: \"100px\" }}\n            onClick={() => setModal(true)}\n          >\n            <PlusOutlined />\n            Add\n          </Button>\n        </div>\n        <>\n          <Row gutter={16}>\n            <Col span={5} onClick={handleMessageClick}>\n              <Card\n                hoverable\n                cover={\n                  <img\n                    src={`https://picsum.photos/200/300`}\n                    alt=\"This is alt\"\n                  />\n                }\n              >\n                <Card.Meta\n                  title=\"You don't know JS\"\n                  description=\"This is the message\"\n                />\n              </Card>\n            </Col>\n          </Row>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"30px\",\n            }}\n          >\n            <Pagination\n              defaultCurrent={1}\n              total={0}\n              onChange={handleMessageChange}\n            />\n          </div>\n        </>\n        )\n      </div>\n    </>\n  );\n};\nexport default Home;","/home/sol/github.com/solkn/chat-app-reactjs/src/pages/login/index.jsx",[],"/home/sol/github.com/solkn/chat-app-reactjs/src/pages/signup/index.jsx",["38"],"import { Form, Input, Button, Space, Typography } from 'antd';\n\nconst SignUp = () => {\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return (\n    <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n      <Form.Item label=\"fName\">\n        <Space>\n          <Form.Item\n            name=\"fName\"\n            noStyle\n            rules={[{ required: true, message: 'first name is required' }]}\n          >\n            <Input style={{ width: 250,fontStyle:'italic' }} placeholder=\"Please input\" />\n          </Form.Item>\n      \n        </Space>\n      </Form.Item>\n      <Form.Item label=\"lName\">\n        <Space>\n          <Form.Item\n            name=\"lName\"\n            noStyle\n            rules={[{ required: true, message: 'last name is required' }]}\n          >\n            <Input style={{ width: 250,fontStyle:'italic' }} placeholder=\"Please input\" />\n          </Form.Item>\n    \n        </Space>\n      </Form.Item>\n      <Form.Item label=\"Email\">\n          \n      <Space>\n          <Form.Item\n            name=\"email\"\n            noStyle\n            rules={[{ required: true, message: 'Email is required' }]}\n          >\n            <Input style={{ width: 250,fontStyle:'italic'  }} placeholder=\"Please input\" />\n          </Form.Item>\n \n        </Space>\n       \n      </Form.Item>\n\n      <Form.Item label=\"Password\">\n        <Space>\n          <Form.Item\n            name=\"password\"\n            noStyle\n            rules={[{ required: true, message: 'password is required' }]}\n          >\n            <Input style={{ width: 250,fontStyle:'italic'  }} placeholder=\"Please input\" />\n          </Form.Item>\n          \n        </Space>\n      </Form.Item>\n    \n      <Form.Item label=\" \" colon={false}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SignUp;","/home/sol/github.com/solkn/chat-app-reactjs/src/components/top-bar/index.jsx",[],{"ruleId":"39","severity":1,"message":"40","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":18},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"47","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":21},{"ruleId":"39","severity":1,"message":"48","line":1,"column":38,"nodeType":"41","messageId":"42","endLine":1,"endColumn":48},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'isModalOpen' is assigned a value but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]