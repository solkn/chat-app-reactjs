{"ast":null,"code":"import { UserActionTypes } from \"./types\";\nimport axios from \"axios\";\nexport const loginStart = () => ({\n  type: UserActionTypes.LOGINSTART\n});\nexport const loginSuccess = (user, token) => ({\n  type: UserActionTypes.LOGIN_SUCCESS,\n  payload: {\n    token,\n    user\n  }\n});\nexport const loginError = error => ({\n  type: UserActionTypes.LOGIN_ERROR,\n  payload: {\n    error\n  }\n});\n/**\n * Asyn Action creator\n */\n\nexport const loginAsync = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(loginStart());\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/users/login`, {\n        email,\n        password\n      });\n      dispatch(loginSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      dispatch(loginError(err));\n    }\n  };\n};","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/store/user/action.js"],"names":["UserActionTypes","axios","loginStart","type","LOGINSTART","loginSuccess","user","token","LOGIN_SUCCESS","payload","loginError","error","LOGIN_ERROR","loginAsync","email","password","dispatch","getState","response","post","process","env","REACT_APP_API_URL","data","err"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEH,eAAe,CAACI;AADS,CAAP,CAAnB;AAIP,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;AAC5CJ,EAAAA,IAAI,EAAEH,eAAe,CAACQ,aADsB;AAE5CC,EAAAA,OAAO,EAAE;AACPF,IAAAA,KADO;AAEPD,IAAAA;AAFO;AAFmC,CAAlB,CAArB;AAQP,OAAO,MAAMI,UAAU,GAAIC,KAAD,KAAY;AACpCR,EAAAA,IAAI,EAAEH,eAAe,CAACY,WADc;AAEpCH,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAF2B,CAAZ,CAAnB;AAOP;AACA;AACA;;AAEA,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;;AACA,QAAI;AACF,YAAMgB,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CACpB,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cADZ,EAErB;AACER,QAAAA,KADF;AAEEC,QAAAA;AAFF,OAFqB,CAAvB;AAOAC,MAAAA,QAAQ,CAACX,YAAY,CAACa,QAAQ,CAACK,IAAT,CAAcjB,IAAf,EAAqBY,QAAQ,CAACK,IAAT,CAAchB,KAAnC,CAAb,CAAR;AACD,KATD,CASE,OAAOiB,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAACN,UAAU,CAACc,GAAD,CAAX,CAAR;AACD;AACF,GAdD;AAeD,CAhBM","sourcesContent":["import { UserActionTypes } from \"./types\";\nimport axios from \"axios\";\n\nexport const loginStart = () => ({\n  type: UserActionTypes.LOGINSTART,\n});\n\nexport const loginSuccess = (user, token) => ({\n  type: UserActionTypes.LOGIN_SUCCESS,\n  payload: {\n    token,\n    user,\n  },\n});\n\nexport const loginError = (error) => ({\n  type: UserActionTypes.LOGIN_ERROR,\n  payload: {\n    error,\n  },\n});\n\n/**\n * Asyn Action creator\n */\n\nexport const loginAsync = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(loginStart());\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/users/login`,\n        {\n          email,\n          password,\n        }\n      );\n      dispatch(loginSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      dispatch(loginError(err));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}