{"ast":null,"code":"var _jsxFileName = \"/home/sol/github.com/solkn/chat-app-reactjs/src/pages/messenger/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../store/user/action\";\nimport BottomBar from \"../../components/bottom-bar\";\nimport UserNavBar from \"../../components/user_nav\";\nimport { Input, Form, Button, Spin } from \"antd\";\nimport { fetchMessagesAsync } from \"../../store/message/action\"; // function MessageContainer ({ messageData,fetchMessages }){\n//   useEffect(()=>{ \n//       fetchMessages()\n//   },[])\n//   return (\n//     messageData.fetchMessagesLoading ?(\n//       <h2>Loading</h2>\n//     ):messageData.fetchMessagesError?(\n//       <h2>{ messageData.fetchMessagesError }</h2>\n//     ):\n//     (\n//       <div>\n//         <h2>Messages List</h2>\n//          <div>\n//            {\n//             //  messageData &&\n//             //  messageData.messages &&\n//               messageData.messages.map(message => console.log(message.msg))\n//            }\n//          </div>\n//       </div>\n//     )\n//   )\n// }\n// const mapStateToProps = state => {\n//   return {\n//       messageData: state.message\n//   }\n// }\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       fetchMessages: () => dispatch(fetchMessagesAsync())\n//   }\n// }\n// export default connect(mapStateToProps,mapDispatchToProps)(MessageContainer)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messenger = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    messages,\n    fetchMessagesLoading\n  } = useSelector(state => state.message);\n  useEffect(() => {\n    dispatch(fetchMessagesAsync());\n  }, []); //console.log(\"messages are:\",message);\n\n  const handleMessageClick = id => {\n    history.push(`/messages/${id}/edit`);\n  };\n\n  const onSend = () => {\n    dispatch(logOut());\n  };\n\n  if (fetchMessagesLoading || !messages) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"550px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messenger\",\n      style: {\n        marginLeft: 400,\n        marginTop: 10,\n        width: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: //  messageData &&\n        //  messageData.messages &&\n        messages.map(message => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      initialValues: {},\n      onFinish: onSend,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"message\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          rows: 4,\n          placeholder: \"write some thing\",\n          style: {\n            marginLeft: 400,\n            marginTop: 10,\n            width: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: \"100px\",\n              height: 50,\n              marginTop: -115,\n              marginLeft: 450,\n              borderRadius: 30,\n              display: \"block\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BottomBar, {\n      style: {\n        marginTop: -200,\n        position: \"absolute\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Messenger, \"5K9hQSNXzHSjnzCWCmbUACNt+/M=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/pages/messenger/index.jsx"],"names":["useState","useEffect","useHistory","connect","useDispatch","useSelector","logOut","BottomBar","UserNavBar","Input","Form","Button","Spin","fetchMessagesAsync","Messenger","dispatch","history","messages","fetchMessagesLoading","state","message","handleMessageClick","id","push","onSend","width","height","display","justifyContent","alignItems","marginLeft","marginTop","map","msg","borderRadius","position"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../store/user/action\";\nimport BottomBar from \"../../components/bottom-bar\";\nimport UserNavBar from \"../../components/user_nav\";\nimport { Input,Form,Button,Spin} from \"antd\";\nimport { fetchMessagesAsync } from \"../../store/message/action\";\n\n\n// function MessageContainer ({ messageData,fetchMessages }){\n\n//   useEffect(()=>{ \n//       fetchMessages()\n//   },[])\n\n//   return (\n//     messageData.fetchMessagesLoading ?(\n//       <h2>Loading</h2>\n//     ):messageData.fetchMessagesError?(\n\n//       <h2>{ messageData.fetchMessagesError }</h2>\n//     ):\n    \n//     (\n//       <div>\n//         <h2>Messages List</h2>\n//          <div>\n//            {\n//             //  messageData &&\n//             //  messageData.messages &&\n//               messageData.messages.map(message => console.log(message.msg))\n//            }\n//          </div>\n//       </div>\n//     )\n//   )\n\n// }\n\n\n// const mapStateToProps = state => {\n//   return {\n//       messageData: state.message\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       fetchMessages: () => dispatch(fetchMessagesAsync())\n//   }\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(MessageContainer)\n\n\n\n\nconst Messenger = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n\n\n  const { messages,fetchMessagesLoading} = useSelector(\n          state => state.message);\n  \n\n\n  useEffect(() => {\n    \n    dispatch(fetchMessagesAsync());\n\n  }, []);\n\n\n  //console.log(\"messages are:\",message);\n \n const handleMessageClick = (id) => {\n    history.push(`/messages/${id}/edit`);\n  };\n\n\n  const onSend = () => {\n    dispatch(logOut());\n  }\n\n  if (fetchMessagesLoading || !messages) {\n    return (\n      <>\n        <UserNavBar />\n        <div\n          style={{\n            width: \"100%\",\n            height: \"550px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Spin tip=\"Loading messages...\" />\n        </div>\n\n        <BottomBar/>\n      </>\n    );\n  }\n  return (\n    <>\n    <UserNavBar/>\n\n    <div id =\"messenger\" style={{marginLeft:400,marginTop:10,width:500}}>\n         \n             <h2>Messages List</h2>\n          <div>\n            {\n            //  messageData &&\n            //  messageData.messages &&\n              messages.map((message) => (<p>{message.msg}</p>))\n           }\n         </div>\n    </div>\n    \n    \n   <Form initialValues={{}} onFinish={onSend}>\n        \n          <Form.Item\n            name=\"message\"\n          >\n            <Input.TextArea rows={4} placeholder=\"write some thing\" \n                    style={{marginLeft:400,marginTop:10,width:400}} />\n          </Form.Item>\n\n          <Form.Item>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ width: \"100px\",height:50,marginTop:-115,\n                marginLeft:450,borderRadius:30,display:\"block\" }}\n              >\n                Send\n              </Button>\n            </div>\n          </Form.Item>\n   \n        </Form>\n\n  <BottomBar style={{marginTop:-200,position:\"absolute\"}}/>\n    </>\n  );\n};\nexport default Messenger;"]},"metadata":{},"sourceType":"module"}