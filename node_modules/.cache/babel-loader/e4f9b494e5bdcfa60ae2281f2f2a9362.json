{"ast":null,"code":"var _jsxFileName = \"/home/sol/github.com/solkn/chat-app-reactjs/src/pages/messenger/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../store/user/action\";\nimport BottomBar from \"../../components/bottom-bar\";\nimport UserNavBar from \"../../components/user_nav\";\nimport { Input, Form, Button, Spin } from \"antd\";\nimport { fetchMessagesAsync } from \"../../store/message/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessageContainer({\n  messageData,\n  fetchMessages\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  return messageData.fetchMessagesLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this) : messageData.fetchMessagesError ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: messageData.fetchMessagesError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: //  messageData &&\n      //  messageData.messages &&\n      //  messageData.messages.map(message => <p>{message.msg}</p>)\n      messageData.messages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MessageContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MessageContainer;\n\nconst mapStateToProps = state => {\n  return {\n    messageData: state.message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMessages: () => dispatch(fetchMessagesAsync())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageContainer); // const Messenger = () => {\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const message = useSelector(state => state.message);\n//   const {fetchMessagesLoading,  messages} = message;\n//   useEffect(() => {\n//     dispatch(fetchMessagesAsync());\n//   }, []);\n//   //console.log(\"messages are:\",message);\n//  const handleMessageClick = (id) => {\n//     history.push(`/messages/${id}/edit`);\n//   };\n//   const onSend = () => {\n//     dispatch(logOut());\n//   }\n//   if (fetchMessagesLoading || !messages) {\n//     return (\n//       <>\n//         <UserNavBar />\n//         <div\n//           style={{\n//             width: \"100%\",\n//             height: \"550px\",\n//             display: \"flex\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <Spin tip=\"Loading messages...\" />\n//         </div>\n//         <BottomBar/>\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//     <UserNavBar/>\n//     <div id =\"messenger\" style={{marginLeft:400,marginTop:10,width:500}}>\n//     {/* {message.map(m => (\n//           <li key={m.msg}>\n//             {m.msg}\n//           </li>\n//         ))} */}\n//     </div>\n//    <Form initialValues={{}} onFinish={onSend}>\n//           <Form.Item\n//             name=\"message\"\n//           >\n//             <Input.TextArea rows={4} placeholder=\"write some thing\" \n//                     style={{marginLeft:400,marginTop:10,width:400}} />\n//           </Form.Item>\n//           <Form.Item>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 justifyContent: \"center\",\n//               }}\n//             >\n//               <Button\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 style={{ width: \"100px\",height:50,marginTop:-115,\n//                 marginLeft:450,borderRadius:30,display:\"block\" }}\n//               >\n//                 Send\n//               </Button>\n//             </div>\n//           </Form.Item>\n//         </Form>\n//   <BottomBar style={{marginTop:-200,position:\"absolute\"}}/>\n//     </>\n//   );\n// };\n// export default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageContainer\");","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/pages/messenger/index.jsx"],"names":["useState","useEffect","useHistory","connect","useDispatch","useSelector","logOut","BottomBar","UserNavBar","Input","Form","Button","Spin","fetchMessagesAsync","MessageContainer","messageData","fetchMessages","fetchMessagesLoading","fetchMessagesError","messages","mapStateToProps","state","message","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,KAAT,EAAeC,IAAf,EAAoBC,MAApB,EAA2BC,IAA3B,QAAsC,MAAtC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;;;AAGA,SAASC,gBAAT,CAA2B;AAAEC,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAA3B,EAAyD;AAAA;;AAEvDf,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIA,SACED,WAAW,CAACE,oBAAZ,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,GAEEF,WAAW,CAACG,kBAAZ,gBAEA;AAAA,cAAMH,WAAW,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,UAFA,gBAMA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEG;AAAA,gBAEG;AACA;AACA;AACAH,MAAAA,WAAW,CAACI,QAAZ;AALH;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ;AAuBD;;GA7BQL,gB;;KAAAA,gB;;AAgCT,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACHN,IAAAA,WAAW,EAAEM,KAAK,CAACC;AADhB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHR,IAAAA,aAAa,EAAE,MAAMQ,QAAQ,CAACX,kBAAkB,EAAnB;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CT,gBAA5C,CAAf,C,CAEA;AAEA;AACA;AAIA;AAEA;AAGA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../store/user/action\";\nimport BottomBar from \"../../components/bottom-bar\";\nimport UserNavBar from \"../../components/user_nav\";\nimport { Input,Form,Button,Spin} from \"antd\";\nimport { fetchMessagesAsync } from \"../../store/message/action\";\n\n\nfunction MessageContainer ({ messageData,fetchMessages }){\n\n  useEffect(()=>{ \n      fetchMessages()\n  },[])\n\n  return (\n    messageData.fetchMessagesLoading ?(\n      <h2>Loading</h2>\n    ):messageData.fetchMessagesError?(\n\n      <h2>{ messageData.fetchMessagesError }</h2>\n    ):\n    \n    (\n      <div>\n        <h2>Messages List</h2>\n         <div>\n           {\n            //  messageData &&\n            //  messageData.messages &&\n            //  messageData.messages.map(message => <p>{message.msg}</p>)\n            messageData.messages()\n           }\n         </div>\n      </div>\n    )\n  )\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n      messageData: state.message\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchMessages: () => dispatch(fetchMessagesAsync())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MessageContainer)\n\n// const Messenger = () => {\n\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n\n\n\n//   const message = useSelector(state => state.message);\n  \n//   const {fetchMessagesLoading,  messages} = message;\n\n\n//   useEffect(() => {\n    \n//     dispatch(fetchMessagesAsync());\n\n//   }, []);\n\n\n//   //console.log(\"messages are:\",message);\n \n//  const handleMessageClick = (id) => {\n//     history.push(`/messages/${id}/edit`);\n//   };\n\n\n//   const onSend = () => {\n//     dispatch(logOut());\n//   }\n\n//   if (fetchMessagesLoading || !messages) {\n//     return (\n//       <>\n//         <UserNavBar />\n//         <div\n//           style={{\n//             width: \"100%\",\n//             height: \"550px\",\n//             display: \"flex\",\n//             justifyContent: \"center\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <Spin tip=\"Loading messages...\" />\n//         </div>\n\n//         <BottomBar/>\n//       </>\n//     );\n//   }\n//   return (\n//     <>\n//     <UserNavBar/>\n\n//     <div id =\"messenger\" style={{marginLeft:400,marginTop:10,width:500}}>\n         \n//     {/* {message.map(m => (\n//           <li key={m.msg}>\n//             {m.msg}\n//           </li>\n//         ))} */}\n       \n//     </div>\n    \n    \n//    <Form initialValues={{}} onFinish={onSend}>\n        \n//           <Form.Item\n//             name=\"message\"\n//           >\n//             <Input.TextArea rows={4} placeholder=\"write some thing\" \n//                     style={{marginLeft:400,marginTop:10,width:400}} />\n//           </Form.Item>\n\n//           <Form.Item>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 justifyContent: \"center\",\n//               }}\n//             >\n//               <Button\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 style={{ width: \"100px\",height:50,marginTop:-115,\n//                 marginLeft:450,borderRadius:30,display:\"block\" }}\n//               >\n//                 Send\n//               </Button>\n//             </div>\n//           </Form.Item>\n   \n//         </Form>\n\n//   <BottomBar style={{marginTop:-200,position:\"absolute\"}}/>\n//     </>\n//   );\n// };\n// export default Messenger;"]},"metadata":{},"sourceType":"module"}