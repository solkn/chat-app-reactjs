{"ast":null,"code":"import { UserActionTypes } from \"./types\";\nimport axios from \"axios\";\n/**\n * LOGIN ACTION\n * @returns ACTION\n */\n\nexport const loginStart = () => ({\n  type: UserActionTypes.LOGIN_START\n});\nexport const loginSuccess = (user, token) => ({\n  type: UserActionTypes.LOGIN_SUCCESS,\n  payload: {\n    token,\n    user\n  }\n});\nexport const loginError = error => ({\n  type: UserActionTypes.LOGIN_ERROR,\n  payload: {\n    error\n  }\n});\n/**\n * SIGNUP ACTION\n * @returns ACTION\n */\n\nexport const signUpStart = () => ({\n  type: UserActionTypes.SIGN_UP_START\n});\nexport const signUpSuccess = (user, token) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    token,\n    user\n  }\n});\nexport const signUpError = error => ({\n  type: UserActionTypes.SIGN_UP_ERROR,\n  payload: {\n    error\n  }\n});\nexport const logOut = () => ({\n  type: UserActionTypes.LOG_OUT\n});\n/**\n * Login Async Action Creator \n */\n\nexport const loginAsync = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(loginStart());\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/users/login`, {\n        email,\n        password\n      });\n      dispatch(loginSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      //dispatch(loginError(err));\n      console.log(\"error has occcurred!\");\n    }\n  };\n};\n/**\n * SignUp Async Action Creater\n */\n\nexport const signUpAsync = (fName, lName, email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(signUpStart());\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/users/signup`, {\n        fName,\n        lName,\n        email,\n        password\n      });\n      dispatch(signUpSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      dispatch(signUpError(err));\n    }\n  };\n};","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/store/user/action.js"],"names":["UserActionTypes","axios","loginStart","type","LOGIN_START","loginSuccess","user","token","LOGIN_SUCCESS","payload","loginError","error","LOGIN_ERROR","signUpStart","SIGN_UP_START","signUpSuccess","SIGN_UP_SUCCESS","signUpError","SIGN_UP_ERROR","logOut","LOG_OUT","loginAsync","email","password","dispatch","getState","response","post","process","env","REACT_APP_API_URL","data","err","console","log","signUpAsync","fName","lName"],"mappings":"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","sourcesContent":["import { UserActionTypes } from \"./types\";\nimport axios from \"axios\";\n\n/**\n * LOGIN ACTION\n * @returns ACTION\n */\nexport const loginStart = () => ({\n  type: UserActionTypes.LOGIN_START,\n});\n\nexport const loginSuccess = (user, token) => ({\n  type: UserActionTypes.LOGIN_SUCCESS,\n  payload: {\n    token,\n    user,\n  },\n});\n\nexport const loginError = (error) => ({\n  type: UserActionTypes.LOGIN_ERROR,\n  payload: {\n    error,\n  },\n});\n\n/**\n * SIGNUP ACTION\n * @returns ACTION\n */\nexport const signUpStart = () => ({\n  type: UserActionTypes.SIGN_UP_START,\n});\n\nexport const signUpSuccess = (user, token) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    token,\n    user,\n  },\n});\n\nexport const signUpError = (error) => ({\n  type: UserActionTypes.SIGN_UP_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const logOut = () => ({\n  type: UserActionTypes.LOG_OUT,\n});\n\n/**\n * Login Async Action Creator \n */\n\nexport const loginAsync = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(loginStart());\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/users/login`,\n        {\n          email,\n          password,\n        }\n\n      );\n      dispatch(loginSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      //dispatch(loginError(err));\n      console.log(\"error has occcurred!\");\n\n    }\n  };\n};\n\n/**\n * SignUp Async Action Creater\n */\n\nexport const signUpAsync = (fName, lName, email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(signUpStart());\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/users/signup`,\n        {\n          fName,\n          lName,\n          email,\n          password,\n        }\n      );\n      dispatch(signUpSuccess(response.data.user, response.data.token));\n    } catch (err) {\n      dispatch(signUpError(err));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}