{"ast":null,"code":"import { MessageActionTypes } from \"./types\";\nimport axios from \"axios\";\n/**\n * MESSAGE FETCH ACTION\n * @returns ACTION\n */\n\nexport const messageFetchStart = () => ({\n  type: MessageActionTypes.MESSAGE_FETCH_START\n});\nexport const messageFetchSuccess = (msg, msgFrom) => ({\n  type: MessageActionTypes.MESSAGE_FETCH_SUCCESS,\n  payload: {\n    msg,\n    msgFrom\n  }\n});\nexport const messageFetchError = error => ({\n  type: MessageActionTypes.MESSAGE_FETCH_FAILURE,\n  payload: {\n    error\n  }\n});\n/**\n * MESSAGE CREATE ACTION\n * @returns ACTION\n */\n\nexport const messageCreateStart = () => ({\n  type: MessageActionTypes.MESSAGE_CREATE_START\n});\nexport const messageCreateSuccess = msg => ({\n  type: MessageActionTypes.MESSAGE_CREATE_SUCCESS,\n  payload: {\n    msg\n  }\n});\nexport const messageCreateError = error => ({\n  type: MessageActionTypes.MESSAGE_CREATE_FAILURE,\n  payload: {\n    error\n  }\n});\n/**\n * MESSAGE UPDATE ACTION\n * @returns ACTION\n */\n\nexport const messageUpdateStart = () => ({\n  type: MessageActionTypes.MESSAGE_UPDATE_START\n});\nexport const messageUpdateSuccess = msg => ({\n  type: MessageActionTypes.MESSAGE_UPDATE_SUCCESS,\n  payload: {\n    msg\n  }\n});\nexport const messageUpdateError = error => ({\n  type: MessageActionTypes.MESSAGE_UPDATE_FAILURE,\n  payload: {\n    error\n  }\n});\n/**\n * MESSAGE DELETE ACTION\n * @returns ACTION\n */\n\nexport const messageDeleteStart = () => ({\n  type: MessageActionTypes.MESSAGE_DELETE_START\n});\nexport const messageDeleteSuccess = msg => ({\n  type: MessageActionTypes.MESSAGE_DELETE_SUCCESS,\n  payload: {\n    msg\n  }\n});\nexport const messageDeleteError = error => ({\n  type: MessageActionTypes.MESSAGE_DELETE_FAILURE,\n  payload: {\n    error\n  }\n});\n/**\n * Message Async Action Types\n */\n\nexport const fetchMessagesAsync = () => {\n  return async (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n\n    try {\n      dispatch(messageFetchStart());\n      const response = await axios.get(\"/api/v1/messages\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      dispatch(messageFetchSuccess(response.data.msgFrom, response.data.msg));\n    } catch (err) {\n      dispatch(messageFetchError(err));\n    }\n  };\n};\nexport const CreateMessageAsync = (message, messageFrom, messageTo) => {\n  return async (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n\n    try {\n      dispatch(messageCreateSuccess());\n      const response = await axios.post(\"/api/v1/messages\", {\n        message,\n        messageFrom,\n        messageTo\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"text/json\"\n        }\n      });\n      dispatch(messageCreateSuccess(response.data.msg));\n    } catch (err) {\n      dispatch(messageCreateError(err));\n    }\n  };\n};\n_c = CreateMessageAsync;\nexport const updateMessageAsync = (message, messageFrom, messageTo) => {\n  return async (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n\n    try {\n      dispatch(messageUpdateSuccess());\n      const response = await axios.put(\"/api/v1/messages\", {\n        message,\n        messageFrom,\n        messageTo\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"text/json\"\n        }\n      });\n      dispatch(messageUpdateSuccess(response.data.msg));\n    } catch (err) {\n      dispatch(messageUpdateError(err));\n    }\n  };\n};\nexport const deleteMessageAsync = message => {\n  return async (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n\n    try {\n      dispatch(messageDeleteSuccess());\n      const response = await axios.delete(\"/api/v1/messages\", message, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"text/json\"\n        }\n      });\n      dispatch(messageDeleteSuccess(response.data.msg));\n    } catch (err) {\n      dispatch(messageDeleteError(err));\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMessageAsync\");","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/store/messege/action.js"],"names":["MessageActionTypes","axios","messageFetchStart","type","MESSAGE_FETCH_START","messageFetchSuccess","msg","msgFrom","MESSAGE_FETCH_SUCCESS","payload","messageFetchError","error","MESSAGE_FETCH_FAILURE","messageCreateStart","MESSAGE_CREATE_START","messageCreateSuccess","MESSAGE_CREATE_SUCCESS","messageCreateError","MESSAGE_CREATE_FAILURE","messageUpdateStart","MESSAGE_UPDATE_START","messageUpdateSuccess","MESSAGE_UPDATE_SUCCESS","messageUpdateError","MESSAGE_UPDATE_FAILURE","messageDeleteStart","MESSAGE_DELETE_START","messageDeleteSuccess","MESSAGE_DELETE_SUCCESS","messageDeleteError","MESSAGE_DELETE_FAILURE","fetchMessagesAsync","dispatch","getState","user","token","response","get","headers","Authorization","data","err","CreateMessageAsync","message","messageFrom","messageTo","post","updateMessageAsync","put","deleteMessageAsync","delete"],"mappings":"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","sourcesContent":["import { MessageActionTypes } from \"./types\";\nimport axios from \"axios\";\n\n/**\n * MESSAGE FETCH ACTION\n * @returns ACTION\n */\n\nexport const messageFetchStart = () =>({\n     type:MessageActionTypes.MESSAGE_FETCH_START,\n});\nexport const messageFetchSuccess = (msg,msgFrom) =>({\n    type:MessageActionTypes.MESSAGE_FETCH_SUCCESS,\n    payload:{\n        msg,\n        msgFrom,\n    },\n});\nexport const messageFetchError = (error) =>({\n    type:MessageActionTypes.MESSAGE_FETCH_FAILURE,\n    payload:{\n        error,\n    }\n});\n\n\n/**\n * MESSAGE CREATE ACTION\n * @returns ACTION\n */\n\n export const messageCreateStart = () =>({\n    type:MessageActionTypes.MESSAGE_CREATE_START,\n});\nexport const messageCreateSuccess = (msg) =>({\n   type:MessageActionTypes.MESSAGE_CREATE_SUCCESS,\n   payload:{\n       msg,  \n   },\n});\nexport const messageCreateError = (error) =>({\n   type:MessageActionTypes.MESSAGE_CREATE_FAILURE,\n   payload:{\n       error,\n   }\n});\n\n/**\n * MESSAGE UPDATE ACTION\n * @returns ACTION\n */\n\n export const messageUpdateStart = () =>({\n    type:MessageActionTypes.MESSAGE_UPDATE_START,\n});\nexport const messageUpdateSuccess = (msg) =>({\n   type:MessageActionTypes.MESSAGE_UPDATE_SUCCESS,\n   payload:{\n       msg,\n   },\n});\nexport const messageUpdateError = (error) =>({\n   type:MessageActionTypes.MESSAGE_UPDATE_FAILURE,\n   payload:{\n       error,\n   }\n});\n\n\n/**\n * MESSAGE DELETE ACTION\n * @returns ACTION\n */\n\n export const messageDeleteStart = () =>({\n    type:MessageActionTypes.MESSAGE_DELETE_START,\n});\nexport const messageDeleteSuccess = (msg) =>({\n   type:MessageActionTypes.MESSAGE_DELETE_SUCCESS,\n   payload:{\n       msg,\n   },\n});\nexport const messageDeleteError = (error) =>({\n   type:MessageActionTypes.MESSAGE_DELETE_FAILURE,\n   payload:{\n       error,\n   }\n});\n\n\n/**\n * Message Async Action Types\n */\n\n export const fetchMessagesAsync = () => {\n    return async (dispatch, getState) => {\n      const {\n        user: { token },\n      } = getState();\n      try {\n        dispatch(messageFetchStart());\n        const response = await axios.get(\n          \"/api/v1/messages\",\n          {\n           \n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        dispatch(\n          messageFetchSuccess(\n            response.data.msgFrom,\n            response.data.msg,\n          )\n        );\n      } catch (err) {\n        dispatch(messageFetchError(err));\n      }\n    };\n  };\n  \n  export const CreateMessageAsync = (message,messageFrom,messageTo) => {\n    return async (dispatch, getState) => {\n      const {\n        user: { token },\n      } = getState();\n      try {\n        dispatch(messageCreateSuccess());\n        const response = await axios.post(\n          \"/api/v1/messages\",\n          {\n              message,\n              messageFrom,\n              messageTo,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"text/json\",\n            },\n          }\n        );\n        dispatch(messageCreateSuccess(response.data.msg));\n      } catch (err) {\n        dispatch(messageCreateError(err));\n      }\n    };\n  };\n\n  export const updateMessageAsync = (message,messageFrom,messageTo) => {\n    return async (dispatch, getState) => {\n      const {\n        user: { token },\n      } = getState();\n      try {\n        dispatch(messageUpdateSuccess());\n        const response = await axios.put(\n          \"/api/v1/messages\",\n          {\n              message,\n              messageFrom,\n              messageTo,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"text/json\",\n            },\n          }\n        );\n        dispatch(messageUpdateSuccess(response.data.msg));\n      } catch (err) {\n        dispatch(messageUpdateError(err));\n      }\n    };\n  };\n\n  export const deleteMessageAsync = (message) => {\n    return async (dispatch, getState) => {\n      const {\n        user: { token },\n      } = getState();\n      try {\n        dispatch(messageDeleteSuccess());\n        const response = await axios.delete(\n          \"/api/v1/messages\",\n          \n              message,\n        \n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"text/json\",\n            },\n          }\n        );\n        dispatch(messageDeleteSuccess(response.data.msg));\n      } catch (err) {\n        dispatch(messageDeleteError(err));\n      }\n    };\n  };\n\n"]},"metadata":{},"sourceType":"module"}