{"ast":null,"code":"import { UserActionTypes } from \"./types\";\nimport Cookies from \"js-cookie\";\nconst authCookies = Cookies.get(\"AUTH\") || JSON.stringify({});\nconst INITIAL_STATE = {\n  loginLoading: false,\n  user: null,\n  token: null,\n  loginError: null,\n  ...JSON.parse(authCookies)\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.LOGIN_START:\n      return { ...state,\n        loginError: null,\n        loginLoading: true\n      };\n\n    case UserActionTypes.LOGIN_SUCCESS:\n      Cookies.set(\"AUTH\", JSON.stringify({\n        user: action.payload.user,\n        token: action.payload.token\n      }));\n      return { ...state,\n        loginLoading: false,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n\n    case UserActionTypes.LOGIN_ERROR:\n      return { ...state,\n        loginLoading: false,\n        loginError: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sol/github.com/solkn/chat-app-reactjs/src/store/user/reducer.js"],"names":["UserActionTypes","Cookies","authCookies","get","JSON","stringify","INITIAL_STATE","loginLoading","user","token","loginError","parse","reducer","state","action","type","LOGIN_START","LOGIN_SUCCESS","set","payload","LOGIN_ERROR","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,KAAuBC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA3C;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE,KADM;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,KAAK,EAAE,IAHa;AAIpBC,EAAAA,UAAU,EAAE,IAJQ;AAKpB,KAAGN,IAAI,CAACO,KAAL,CAAWT,WAAX;AALiB,CAAtB;;AAQA,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,eAAe,CAACgB,WAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,UAAU,EAAE,IAFP;AAGLH,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKP,eAAe,CAACiB,aAArB;AACEhB,MAAAA,OAAO,CAACiB,GAAR,CACE,MADF,EAEEd,IAAI,CAACC,SAAL,CAAe;AACbG,QAAAA,IAAI,EAAEM,MAAM,CAACK,OAAP,CAAeX,IADR;AAEbC,QAAAA,KAAK,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAFT,OAAf,CAFF;AAOA,aAAO,EACL,GAAGI,KADE;AAELN,QAAAA,YAAY,EAAE,KAFT;AAGLC,QAAAA,IAAI,EAAEM,MAAM,CAACK,OAAP,CAAeX,IAHhB;AAILC,QAAAA,KAAK,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAJjB,OAAP;;AAMF,SAAKT,eAAe,CAACoB,WAArB;AACE,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,YAAY,EAAE,KAFT;AAGLG,QAAAA,UAAU,EAAEI,MAAM,CAACK,OAAP,CAAeE;AAHtB,OAAP;;AAKF;AACE,aAAOR,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import { UserActionTypes } from \"./types\";\nimport Cookies from \"js-cookie\";\n\nconst authCookies = Cookies.get(\"AUTH\") || JSON.stringify({});\nconst INITIAL_STATE = {\n  loginLoading: false,\n  user: null,\n  token: null,\n  loginError: null,\n  ...JSON.parse(authCookies),\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.LOGIN_START:\n      return {\n        ...state,\n        loginError: null,\n        loginLoading: true,\n      };\n    case UserActionTypes.LOGIN_SUCCESS:\n      Cookies.set(\n        \"AUTH\",\n        JSON.stringify({\n          user: action.payload.user,\n          token: action.payload.token,\n        })\n      );\n      return {\n        ...state,\n        loginLoading: false,\n        user: action.payload.user,\n        token: action.payload.token,\n      };\n    case UserActionTypes.LOGIN_ERROR:\n      return {\n        ...state,\n        loginLoading: false,\n        loginError: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}